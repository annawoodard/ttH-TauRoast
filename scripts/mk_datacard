#!/usr/bin/env python

import CombineHarvester.CombineTools.ch as ch
import ROOT as r

import argparse

parser = argparse.ArgumentParser(description='Write some cards.')
parser.add_argument('input', type=str, nargs=1,
        help="input ROOT file")
parser.add_argument('-d', '--discriminant', type=str, default='BDT',
        help="discriminant to use")
args = parser.parse_args()

cats = [(1, 'TTL')]
sigs = ['ttH']
bkgs = ['ttjets']

cb = ch.CombineHarvester()
# cb.SetVerbosity(2)

masses = ch.ValsFromRange('120:130|5')
masses = ['125']
cb.AddObservations(['*'], ['ttH'], ['13TeV'], ['ttl'], cats)
cb.AddProcesses(['*'], ['ttH'], ['13TeV'], ['ttl'], bkgs, cats, False)
cb.AddProcesses(masses, ['ttH'], ['13TeV'], ['ttl'], sigs, cats, True)

cb.cp().AddSyst(cb, 'lumi_13TeV', 'lnN', ch.SystMap()(1.025))
cb.cp().AddSyst(cb, 'CMS_scale_j', 'shape', ch.SystMap()(1.0))
cb.cp().AddSyst(cb, 'CMS_res_j', 'shape', ch.SystMap()(1.0))
cb.cp().AddSyst(cb, 'jetTauFake', 'shape', ch.SystMap()(1.0))
cb.cp().AddSyst(cb, 'eTauFake', 'shape', ch.SystMap()(1.0))
cb.cp().AddSyst(cb, 'tauIdEff', 'shape', ch.SystMap()(1.0))

cb.cp().backgrounds().ExtractShapes(
        args.input[0],
        "$PROCESS_{0}_$BIN".format(args.discriminant),
        "$PROCESS_{0}_$BIN_$SYSTEMATIC".format(args.discriminant)
)
cb.cp().signals().ExtractShapes(
        args.input[0],
        "$PROCESS$MASS_{0}_$BIN".format(args.discriminant),
        "$PROCESS$MASS_{0}_$BIN_$SYSTEMATIC".format(args.discriminant)
)

cb.PrintObs().PrintProcs().PrintSysts()

cb.WriteDatacard("card.txt", "file.root")
writer = ch.CardWriter('$TAG/$MASS/$ANALYSIS_$CHANNEL.txt',
        '$TAG/common/$ANALYSIS_$CHANNEL.root')
writer.SetVerbosity(1)
writer.WriteCards('limits', cb)
